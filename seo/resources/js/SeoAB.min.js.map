{"version":3,"file":"SeoAB.min.js","sources":["../../../resources/js/_helpers/createElement.js","../../../resources/js/seoAB/LayoutDesigner.js","../../../resources/js/_helpers/TextStatistics.js","../../../resources/js/SeoAB.js"],"sourcesContent":["/**\n * ## Create Element\n * Quick and easy DOM element creation\n *\n * @param {string=} tag - The element tag\n * @param {object=} attributes - The attributes to add, mapping the key as\n *     the attribute name, and the value as its value. If the value is a\n *     function, it will be added as an event.\n * @param {(Array|*)=} children - An array of children (can be a mixture of\n *     Nodes to append, or other values to be stringified and appended\n *     as text).\n * @return {Element} - The created element\n */\nexport default function createElement (\n\ttag = \"div\",\n\tattributes = {},\n\tchildren = []\n) {\n\tconst elem = document.createElement(tag);\n\t\n\tfor (let [key, value] of Object.entries(attributes)) {\n\t\tif (!value) continue;\n\t\t\n\t\tif (typeof value === typeof (() => {})) {\n\t\t\tif (key === \"ref\") value(elem);\n\t\t\telse elem.addEventListener(key, value);\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif (key === \"style\")\n\t\t\tvalue = value.replace(/[\\t\\r\\n]/g, \" \").trim();\n\t\t\n\t\telem.setAttribute(key, value);\n\t}\n\t\n\tif (!Array.isArray(children))\n\t\tchildren = [children];\n\t\n\tchildren.map(child => {\n\t\tif (!child) return;\n\t\t\n\t\ttry {\n\t\t\telem.appendChild(child);\n\t\t} catch (_) {\n\t\t\telem.appendChild(document.createTextNode(child));\n\t\t}\n\t});\n\t\n\treturn elem;\n}","/* globals $ */\n/**\n * Layout Designer\n *\n * @author    Tam McDonald\n * @copyright Ether Creative 2017\n * @link      https://ethercreative.co.uk\n * @package   SEO\n * @since     2.0.0\n */\n\nimport { t } from \"../helpers\";\n\nexport default class LayoutDesigner {\n\t\n\t// Variables\n\t// =========================================================================\n\t\n\tSEO = null;\n\tfieldLayoutDesigner = null;\n\t\n\t// Layout Designer\n\t// =========================================================================\n\t\n\t/**\n\t * Create our Layout Designer\n\t *\n\t * @param {SeoAB} SEO\n\t * @param {Craft.FieldLayoutDesigner} fieldLayoutDesigner\n\t * @constructor\n\t */\n\tconstructor (SEO, fieldLayoutDesigner) {\n\t\tthis.SEO = SEO;\n\t\tthis.fieldLayoutDesigner = fieldLayoutDesigner;\n\t}\n\t\n\t// Actions\n\t// =========================================================================\n\t\n\t/**\n\t * Adds our Enable A/B menu item to the fields settings menu\n\t *\n\t * @param {SeoAB} SEO\n\t * @param $field\n\t */\n\tstatic addMenuItem (SEO, $field) {\n\t\tconst $editBtn = $field.find(\".settings\");\n\t\tconst menuBtn = $editBtn.data(\"menubtn\");\n\t\tconst menu = menuBtn.menu;\n\t\tconst $menu = menu.$container;\n\t\tconst $ul = $menu.children(\"ul\");\n\t\tconst abItem =\n\t\t\t$('<li><a data-action=\"seo-ab\">Enable A/B</a></li>')\n\t\t\t.appendTo($ul);\n\t\t\n\t\tconst option = abItem.children(\"a\")\n\t\t\t, fieldId = $field[0].dataset.id;\n\t\t\n\t\tif (SEO.allEnabledFieldIds.indexOf(fieldId) > -1)\n\t\t\tLayoutDesigner.onEnableOptionSelected(option);\n\t\t\n\t\tmenu.addOptions(option);\n\t}\n\t\n\t// Events\n\t// =========================================================================\n\t\n\tstatic onEnableOptionSelected (option) {\n\t\tconst field = $(option).data(\"menu\").$anchor.parent()[0];\n\t\t\n\t\tif (field.classList.contains(\"seo-ab-enabled\")) {\n\t\t\tfield.classList.remove(\"seo-ab-enabled\");\n\t\t\tfield.removeChild(field.querySelector(\"input[name='seoAB[]']\"));\n\t\t\t\n\t\t\tsetTimeout(() => {\n\t\t\t\toption.textContent = \"Enable A/B\";\n\t\t\t});\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tfield.classList.add(\"seo-ab-enabled\");\n\t\tfield.appendChild(t(\"input\", {\n\t\t\ttype: \"hidden\",\n\t\t\tname: \"seoAB[]\",\n\t\t\tvalue: field.dataset.id,\n\t\t}));\n\t\t\n\t\tsetTimeout(() => {\n\t\t\toption.textContent = \"Disable A/B\";\n\t\t});\n\t}\n\t\n}","/**\n * TextStatistics.js\n * Christopher Giffard (2012)\n * 1:1 API Fork of TextStatistics.php by Dave Child (Thanks mate!)\n * https://github.com/DaveChild/Text-Statistics\n *\n * Modified & re-written for ES6 by Tam<hi@tam.sx>\n */\n\nexport default class TextStatistics {\n\t\n\tconstructor (text) {\n\t\tthis.text = text ? TextStatistics.cleanText(text) : text;\n\t}\n\t\n\t// Statistics\n\t// =========================================================================\n\t\n\t/**\n\t * Calculates the Flesch Kincaid reading ease score\n\t *\n\t * @return {number}\n\t */\n\tfleschKincaidReadingEase () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t206.835\n\t\t\t\t- (1.015 * this.averageWordsPerSentence())\n\t\t\t\t- (84.6 * this.averageSyllablesPerWord())\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Flesch Kincaid grade level\n\t *\n\t * @return {number}\n\t */\n\tfleschKincaidGradeLevel () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(0.39 * this.averageWordsPerSentence())\n\t\t\t\t+ (11.8 * this.averageSyllablesPerWord())\n\t\t\t\t- 15.59\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Gunning Fog score\n\t *\n\t * @return {number}\n\t */\n\tgunningFogScore () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(\n\t\t\t\t\tthis.averageWordsPerSentence()\n\t\t\t\t\t+ this.percentageWordsWithThreeSyllables(false)\n\t\t\t\t) * 0.4\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Coleman Liau index\n\t *\n\t * @return {number}\n\t */\n\tcolemanLiauIndex () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(\n\t\t\t\t\t5.89\n\t\t\t\t\t* (this.letterCount() / this.wordCount())\n\t\t\t\t) - (\n\t\t\t\t\t0.3\n\t\t\t\t\t* (this.sentenceCount() / this.wordCount())\n\t\t\t\t) - 15.8\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Smog index\n\t *\n\t * @return {number}\n\t */\n\tsmogIndex () {\n\t\treturn Math.round(\n\t\t\t1.043\n\t\t\t* Math.sqrt(\n\t\t\t\t(\n\t\t\t\t\tthis.wordsWithThreeSyllables()\n\t\t\t\t\t* (30 / this.sentenceCount())\n\t\t\t\t) + 3.1291\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Automated Readability index\n\t *\n\t * @return {number}\n\t */\n\tautomatedReadabilityIndex () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(\n\t\t\t\t\t4.71\n\t\t\t\t\t* (this.letterCount() / this.wordCount())\n\t\t\t\t) + (\n\t\t\t\t\t0.5\n\t\t\t\t\t* (this.wordCount() / this.sentenceCount())\n\t\t\t\t) - 21.43\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t// Helpers\n\t// =========================================================================\n\t\n\t/**\n\t * Cleans the text for processing\n\t *\n\t * @param {string} text - Text to clean\n\t * @return {string}\n\t */\n\tstatic cleanText (text) {\n\t\t// All these tags should be preceded by a full stop\n\t\t[\"li\", \"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"dd\"].forEach(tag => {\n\t\t\ttext.replace(`</${tag}>`, \".\");\n\t\t});\n\t\t\n\t\ttext = text\n\t\t\t\t// Strip tags\n\t\t\t\t.replace(/<[^>]+>/g, \"\")\n\t\t\t\t\n\t\t\t\t// Replace commas, hyphens etc (count them as spaces)\n\t\t\t\t.replace(/[,:;()-]/g, \" \")\n\t\t\t\t\n\t\t\t\t// Unify terminators\n\t\t        .replace(/[.!?]/g, \".\")\n\t\t\t\t\n\t\t\t\t// Strip leading whitespace\n\t\t\t\t.replace(/^\\s+/g,\"\")\n\t\t\t\t\n\t\t\t\t// Replace new lines with spaces\n\t\t\t\t.replace(/[ ]*(\\n|\\r\\n|\\r)[ ]*/g,\" \")\n\t\t\t\t\n\t\t\t\t// Check for duplicated terminators\n\t\t\t\t.replace(/([.])[. ]+/g,\".\")\n\t\t\t\t\n\t\t\t\t// Pad sentence terminators\n\t\t\t\t.replace(/[ ]*([.])/g,\". \")\n\t\t\t\t\n\t\t\t\t// Remove multiple spaces\n\t\t\t\t.replace(/\\s+/g,\" \")\n\t\t\t\t\n\t\t\t\t// Strip trailing whitespace\n\t\t\t\t.replace(/\\s+$/g,\"\")\n\t\t\t\t\n\t\t\t\t// Strip apostrophe\n\t\t\t\t.replace(/'/g,\"\");\n\t\t\n\t\t// Add final terminator, just in case it's missing\n\t\ttext += \".\";\n\t\t\n\t\treturn text;\n\t}\n\t\n\t/**\n\t * Counts the number of syllables a given word\n\t *\n\t * @param {string} word\n\t * @return {number}\n\t */\n\tstatic syllableCount (word) {\n\t\tlet syllableCount = 0,\n\t\t\tprefixSuffixCount = 0;\n\t\t\n\t\t// Prepare word - make lower case & remove non-word characters\n\t\tword = word.toLowerCase().replace(/[^a-z]/g, \"\");\n\t\t\n\t\t// Specific common exceptions that don't follow the rule set below are\n\t\t// handled individually.\n\t\t// Array of problem words (with word as key, syllable count as value)\n\t\tconst problemWords = {\n\t\t\t\"simile\":       3,\n\t\t\t\"forever\":      3,\n\t\t\t\"shoreline\":    2,\n\t\t};\n\t\t\n\t\t// Return if we've hit a problem word\n\t\tif (problemWords.hasOwnProperty(word)) return problemWords[word];\n\t\t\n\t\t// Syllables that would be counted as two, but should be one\n\t\tconst subSyllables = [\n\t\t\t/cial/,\n\t\t\t/tia/,\n\t\t\t/cius/,\n\t\t\t/cious/,\n\t\t\t/giu/,\n\t\t\t/ion/,\n\t\t\t/iou/,\n\t\t\t/sia$/,\n\t\t\t/[^aeiuoyt]{2,}ed$/,\n\t\t\t/.ely$/,\n\t\t\t/[cg]h?e[rsd]?$/,\n\t\t\t/rved?$/,\n\t\t\t/[aeiouy][dt]es?$/,\n\t\t\t/[aeiouy][^aeiouydt]e[rsd]?$/,\n\t\t\t/^[dr]e[aeiou][^aeiou]+$/,      // Sorts out deal, deign etc.\n\t\t\t/[aeiouy]rse$/,                 // Purse, hearse\n\t\t];\n\t\t\n\t\t// Syllables that would be counted as one, but should be two\n\t\tconst addSyllables = [\n\t\t\t/ia/,\n\t\t\t/riet/,\n\t\t\t/dien/,\n\t\t\t/iu/,\n\t\t\t/io/,\n\t\t\t/ii/,\n\t\t\t/[aeiouym]bl$/,\n\t\t\t/[aeiou]{3}/,\n\t\t\t/^mc/,\n\t\t\t/ism$/,\n\t\t\t/([^aeiouy])\\1l$/,\n\t\t\t/[^l]lien/,\n\t\t\t/^coa[dglx]./,\n\t\t\t/[^gq]ua[^auieo]/,\n\t\t\t/dnt$/,\n\t\t\t/uity$/,\n\t\t\t/ie(r|st)$/\n\t\t];\n\t\t\n\t\t// Single syllable prefixes & suffixes\n\t\tconst prefixSuffix = [\n\t\t\t/^un/,\n\t\t\t/^fore/,\n\t\t\t/ly$/,\n\t\t\t/less$/,\n\t\t\t/ful$/,\n\t\t\t/ers?$/,\n\t\t\t/ings?$/\n\t\t];\n\t\t\n\t\t// Remove prefixes & suffixes, and count how many were takes\n\t\tprefixSuffix.forEach(regex => {\n\t\t\tif (word.match(regex)) {\n\t\t\t\tword = word.replace(regex, \"\");\n\t\t\t\tprefixSuffixCount++;\n\t\t\t}\n\t\t});\n\t\t\n\t\tlet wordPartCount = word\n\t\t\t.split(/[^aeiouy]+/ig)\n\t\t\t.filter(wordPart => !!wordPart.replace(/\\s+/ig,\"\").length)\n\t\t\t.length;\n\t\t\n\t\t// Get preliminary syllable count\n\t\tsyllableCount = wordPartCount + prefixSuffixCount;\n\t\t\n\t\t// Some syllables do not follow normal rules, check for them\n\t\tsubSyllables.forEach(syllable => {\n\t\t\tword.match(syllable) && syllableCount--;\n\t\t});\n\t\t\n\t\taddSyllables.forEach(syllable => {\n\t\t\tword.match(syllable) && syllableCount++;\n\t\t});\n\t\t\n\t\treturn syllableCount || 1;\n\t}\n\t\n\t/**\n\t * Returns the length of the text\n\t *\n\t * @return {Number}\n\t */\n\ttextLength () {\n\t\treturn this.text.length;\n\t}\n\t\n\t/**\n\t * Counts the number of letters in the text\n\t *\n\t * @return {Number}\n\t */\n\tletterCount () {\n\t\treturn this.text.replace(/[^a-z]+/ig, \"\").length;\n\t}\n\t\n\t/**\n\t * Counts the number of sentences in the text\n\t *\n\t * @return {Number|number}\n\t */\n\tsentenceCount () {\n\t\t// FIXME: This will be tripped up by \"Mr.\" or \"U.K.\"\n\t\treturn this.text.replace(/[^.!?]/g, \"\").length || 1;\n\t}\n\t\n\t/**\n\t * Counts the number of words in the text\n\t *\n\t * @return {number}\n\t */\n\twordCount () {\n\t\treturn this.words().length || 1;\n\t}\n\t\n\t/**\n\t * Splits the text into an array of words.\n\t *\n\t * @return {Array}\n\t */\n\twords () {\n\t\tif (this._words) return this._words;\n\t\tthis._words = this.text.split(/[^a-z0-9']+/i);\n\t\treturn this._words;\n\t}\n\t\n\t/**\n\t * Calculates the average number of words per sentence\n\t *\n\t * @return {number}\n\t */\n\taverageWordsPerSentence () {\n\t\treturn this.wordCount() / this.sentenceCount();\n\t}\n\t\n\t/**\n\t * Calculates the average number of syllables per word\n\t *\n\t * @return {number}\n\t */\n\taverageSyllablesPerWord () {\n\t\tlet syllableCount = 0,\n\t\t\twordCount = this.wordCount();\n\t\t\n\t\tthis.text.split(/\\s+/).forEach(word => {\n\t\t\tsyllableCount += TextStatistics.syllableCount(word);\n\t\t});\n\t\t\n\t\treturn (syllableCount || 1) / (wordCount || 1);\n\t}\n\t\n\t/**\n\t * Counts the number of words in the text w/ three syllables\n\t *\n\t * @param {boolean} countProperNouns - If true, will ignore proper nouns or\n\t *     capitalized words.\n\t * @return {number}\n\t */\n\twordsWithThreeSyllables (countProperNouns = true) {\n\t\tlet longWordCount = 0;\n\t\t\n\t\tcountProperNouns = countProperNouns !== false;\n\t\t\n\t\tthis.text.split(/\\s+/).forEach(word => {\n\t\t\t// We don't count proper nouns or capitalized words if the\n\t\t\t// `countProperNouns` argument is set (defaults to true).\n\t\t\tif (!word.match(/^[A-Z]/) || countProperNouns) {\n\t\t\t\tif (this.syllableCount(word) > 2) longWordCount++;\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn longWordCount;\n\t}\n\t\n\t/**\n\t * Calculates the percentage of words with three syllables\n\t *\n\t * @param {boolean} countProperNouns - If true, will ignore proper nouns or\n\t *     capitalized words.\n\t * @return {number}\n\t */\n\tpercentageWordsWithThreeSyllables (countProperNouns = true) {\n\t\treturn (\n\t\t\tthis.wordsWithThreeSyllables(countProperNouns) / this.wordCount()\n        ) * 100;\n\t}\n\t\n}","/* globals Craft */\n/**\n * SEO A/B Testing\n *\n * @author    Tam McDonald\n * @copyright Ether Creative 2017\n * @link      https://ethercreative.co.uk\n * @package   SEO\n * @since     2.0.0\n */\n\nimport LayoutDesigner from \"./seoAB/LayoutDesigner\";\n\nclass SeoAB {\n\t\n\t// Variables\n\t// =========================================================================\n\t\n\tallEnabledFieldIds = [];\n\t\n\t// SeoAb\n\t// =========================================================================\n\t\n\tconstructor (allEnabledFieldIds) {\n\t\tthis.allEnabledFieldIds = allEnabledFieldIds;\n\t\t\n\t\tCraft.FieldLayoutDesigner && this.hookFieldLayoutDesigner();\n\t\t// Craft.initUiElements && console.log(Craft.initUiElements);\n\t\t// Craft.ElementEditor && console.log(Craft.ElementEditor);\n\t}\n\t\n\t// Hooks\n\t// =========================================================================\n\t\n\t/**\n\t * Hook into Crafts Field Layout Designer\n\t */\n\thookFieldLayoutDesigner () {\n\t\tconst SEO = this;\n\t\t\n\t\tconst fieldLayoutDesigner = Craft.FieldLayoutDesigner;\n\t\t\n\t\tconst init = fieldLayoutDesigner.prototype.init\n\t\t\t, initField = fieldLayoutDesigner.prototype.initField\n\t\t\t, onFieldOptionSelect = fieldLayoutDesigner.prototype.onFieldOptionSelect;\n\t\t\n\t\tfieldLayoutDesigner.prototype.init = function () {\n\t\t\tinit.apply(this, arguments);\n\t\t\t\n\t\t\t// Initialize our Layout Designer\n\t\t\t/*this.seoAB = */new LayoutDesigner(SEO, this);\n\t\t};\n\t\t\n\t\tfieldLayoutDesigner.prototype.initField = function (field) {\n\t\t\tinitField.apply(this, arguments);\n\t\t\t\n\t\t\t// Add our \"Enable A/B\" menu item\n\t\t\tLayoutDesigner.addMenuItem(SEO, field);\n\t\t};\n\t\t\n\t\tfieldLayoutDesigner.prototype.onFieldOptionSelect = function (opt) {\n\t\t\tonFieldOptionSelect.apply(this, arguments);\n\t\t\t\n\t\t\tif (opt.dataset.action !== \"seo-ab\") return;\n\t\t\t\n\t\t\t// Fire our on enable select event\n\t\t\tLayoutDesigner.onEnableOptionSelected(opt);\n\t\t};\n\t}\n\t\n}\n\nwindow.SeoAB = SeoAB;"],"names":["createElement","tag","attributes","children","elem","document","Object","entries","key","value","replace","trim","setAttribute","addEventListener","Array","isArray","map","child","appendChild","_","createTextNode","LayoutDesigner","text","TextStatistics","cleanText","Math","round","this","averageWordsPerSentence","averageSyllablesPerWord","percentageWordsWithThreeSyllables","letterCount","wordCount","sentenceCount","sqrt","wordsWithThreeSyllables","length","words","_words","split","syllableCount","forEach","word","countProperNouns","longWordCount","match","_this","prefixSuffixCount","toLowerCase","problemWords","hasOwnProperty","subSyllables","addSyllables","regex","wordPartCount","filter","wordPart","syllable","SEO","fieldLayoutDesigner","$field","menu","find","data","$ul","$container","option","$","appendTo","fieldId","dataset","id","allEnabledFieldIds","indexOf","onEnableOptionSelected","addOptions","field","$anchor","parent","classList","contains","remove","removeChild","querySelector","textContent","add","t","SeoAB","FieldLayoutDesigner","hookFieldLayoutDesigner","Craft","init","prototype","initField","onFieldOptionSelect","apply","arguments","addMenuItem","opt","action","window"],"mappings":"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"}