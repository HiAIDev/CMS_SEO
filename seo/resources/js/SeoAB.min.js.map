{"version":3,"file":"SeoAB.min.js","sources":["../../../resources/js/_helpers/createElement.js","../../../resources/js/_helpers/TextStatistics.js","../../../resources/js/SeoAB.js"],"sourcesContent":["/**\n * ## Create Element\n * Quick and easy DOM element creation\n *\n * @param {string=} tag - The element tag\n * @param {object=} attributes - The attributes to add, mapping the key as\n *     the attribute name, and the value as its value. If the value is a\n *     function, it will be added as an event.\n * @param {(Array|*)=} children - An array of children (can be a mixture of\n *     Nodes to append, or other values to be stringified and appended\n *     as text).\n * @return {Element} - The created element\n */\nexport default function createElement (\n\ttag = 'div',\n\tattributes = {},\n\tchildren = []\n) {\n\tconst elem = document.createElement(tag);\n\t\n\tfor (let [key, value] of Object.entries(attributes)) {\n\t\tif (!value) continue;\n\t\t\n\t\tif (typeof value === typeof (() => {})) {\n\t\t\tif (key === 'ref') value(elem);\n\t\t\telse elem.addEventListener(key, value);\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif (key === 'style')\n\t\t\tvalue = value.replace(/(?:\\r\\n|\\r|\\n|\\t|\\s+)/g, ' ').trim();\n\t\t\n\t\telem.setAttribute(key, value);\n\t}\n\t\n\tif (!Array.isArray(children))\n\t\tchildren = [children];\n\t\n\tchildren.map(child => {\n\t\tif (!child) return;\n\t\t\n\t\ttry {\n\t\t\telem.appendChild(child);\n\t\t} catch (_) {\n\t\t\telem.appendChild(document.createTextNode(child));\n\t\t}\n\t});\n\t\n\treturn elem;\n}","/**\n * TextStatistics.js\n * Christopher Giffard (2012)\n * 1:1 API Fork of TextStatistics.php by Dave Child (Thanks mate!)\n * https://github.com/DaveChild/Text-Statistics\n *\n * Modified & re-written for ES6 by Tam<hi@tam.sx>\n */\n\nexport default class TextStatistics {\n\t\n\tconstructor (text) {\n\t\tthis.text = text ? TextStatistics.cleanText(text) : text;\n\t}\n\t\n\t// Statistics\n\t// =========================================================================\n\t\n\t/**\n\t * Calculates the Flesch Kincaid reading ease score\n\t *\n\t * @return {number}\n\t */\n\tfleschKincaidReadingEase () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t206.835\n\t\t\t\t- (1.015 * this.averageWordsPerSentence())\n\t\t\t\t- (84.6 * this.averageSyllablesPerWord())\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Flesch Kincaid grade level\n\t *\n\t * @return {number}\n\t */\n\tfleschKincaidGradeLevel () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(0.39 * this.averageWordsPerSentence())\n\t\t\t\t+ (11.8 * this.averageSyllablesPerWord())\n\t\t\t\t- 15.59\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Gunning Fog score\n\t *\n\t * @return {number}\n\t */\n\tgunningFogScore () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(\n\t\t\t\t\tthis.averageWordsPerSentence()\n\t\t\t\t\t+ this.percentageWordsWithThreeSyllables(false)\n\t\t\t\t) * 0.4\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Coleman Liau index\n\t *\n\t * @return {number}\n\t */\n\tcolemanLiauIndex () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(\n\t\t\t\t\t5.89\n\t\t\t\t\t* (this.letterCount() / this.wordCount())\n\t\t\t\t) - (\n\t\t\t\t\t0.3\n\t\t\t\t\t* (this.sentenceCount() / this.wordCount())\n\t\t\t\t) - 15.8\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Smog index\n\t *\n\t * @return {number}\n\t */\n\tsmogIndex () {\n\t\treturn Math.round(\n\t\t\t1.043\n\t\t\t* Math.sqrt(\n\t\t\t\t(\n\t\t\t\t\tthis.wordsWithThreeSyllables()\n\t\t\t\t\t* (30 / this.sentenceCount())\n\t\t\t\t) + 3.1291\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Automated Readability index\n\t *\n\t * @return {number}\n\t */\n\tautomatedReadabilityIndex () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(\n\t\t\t\t\t4.71\n\t\t\t\t\t* (this.letterCount() / this.wordCount())\n\t\t\t\t) + (\n\t\t\t\t\t0.5\n\t\t\t\t\t* (this.wordCount() / this.sentenceCount())\n\t\t\t\t) - 21.43\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t// Helpers\n\t// =========================================================================\n\t\n\t/**\n\t * Cleans the text for processing\n\t *\n\t * @param {string} text - Text to clean\n\t * @return {string}\n\t */\n\tstatic cleanText (text) {\n\t\t// All these tags should be preceded by a full stop\n\t\t['li', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'dd'].forEach(tag => {\n\t\t\ttext.replace(`</${tag}>`, \".\");\n\t\t});\n\t\t\n\t\ttext = text\n\t\t\t\t// Strip tags\n\t\t\t\t.replace(/<[^>]+>/g, '')\n\t\t\t\t\n\t\t\t\t// Replace commas, hyphens etc (count them as spaces)\n\t\t\t\t.replace(/[,:;()-]/g, ' ')\n\t\t\t\t\n\t\t\t\t// Unify terminators\n\t\t        .replace(/[.!?]/g, '.')\n\t\t\t\t\n\t\t\t\t// Strip leading whitespace\n\t\t\t\t.replace(/^\\s+/g, '')\n\t\t\t\t\n\t\t\t\t// Replace new lines with spaces\n\t\t\t\t.replace(/[ ]*(\\n|\\r\\n|\\r)[ ]*/g, ' ')\n\t\t\t\t\n\t\t\t\t// Check for duplicated terminators\n\t\t\t\t.replace(/([.])[. ]+/g, '.')\n\t\t\t\t\n\t\t\t\t// Pad sentence terminators\n\t\t\t\t.replace(/[ ]*([.])/g, '. ')\n\t\t\t\t\n\t\t\t\t// Remove multiple spaces\n\t\t\t\t.replace(/\\s+/g, ' ')\n\t\t\t\t\n\t\t\t\t// Strip trailing whitespace\n\t\t\t\t.replace(/\\s+$/g, '')\n\t\t\t\t\n\t\t\t\t// Strip apostrophe\n\t\t\t\t.replace(/'/g, '');\n\t\t\n\t\t// Add final terminator, just in case it's missing\n\t\ttext += \".\";\n\t\t\n\t\treturn text;\n\t}\n\t\n\t/**\n\t * Counts the number of syllables a given word\n\t *\n\t * @param {string} word\n\t * @return {number}\n\t */\n\tstatic syllableCount (word) {\n\t\tlet syllableCount = 0,\n\t\t\tprefixSuffixCount = 0;\n\t\t\n\t\t// Prepare word - make lower case & remove non-word characters\n\t\tword = word.toLowerCase().replace(/[^a-z]/g, '');\n\t\t\n\t\t// Specific common exceptions that don't follow the rule set below are\n\t\t// handled individually.\n\t\t// Array of problem words (with word as key, syllable count as value)\n\t\tconst problemWords = {\n\t\t\t'simile':       3,\n\t\t\t'forever':      3,\n\t\t\t'shoreline':    2,\n\t\t};\n\t\t\n\t\t// Return if we've hit a problem word\n\t\tif (problemWords.hasOwnProperty(word)) return problemWords[word];\n\t\t\n\t\t// Syllables that would be counted as two, but should be one\n\t\tconst subSyllables = [\n\t\t\t/cial/,\n\t\t\t/tia/,\n\t\t\t/cius/,\n\t\t\t/cious/,\n\t\t\t/giu/,\n\t\t\t/ion/,\n\t\t\t/iou/,\n\t\t\t/sia$/,\n\t\t\t/[^aeiuoyt]{2,}ed$/,\n\t\t\t/.ely$/,\n\t\t\t/[cg]h?e[rsd]?$/,\n\t\t\t/rved?$/,\n\t\t\t/[aeiouy][dt]es?$/,\n\t\t\t/[aeiouy][^aeiouydt]e[rsd]?$/,\n\t\t\t/^[dr]e[aeiou][^aeiou]+$/,      // Sorts out deal, deign etc.\n\t\t\t/[aeiouy]rse$/,                 // Purse, hearse\n\t\t];\n\t\t\n\t\t// Syllables that would be counted as one, but should be two\n\t\tconst addSyllables = [\n\t\t\t/ia/,\n\t\t\t/riet/,\n\t\t\t/dien/,\n\t\t\t/iu/,\n\t\t\t/io/,\n\t\t\t/ii/,\n\t\t\t/[aeiouym]bl$/,\n\t\t\t/[aeiou]{3}/,\n\t\t\t/^mc/,\n\t\t\t/ism$/,\n\t\t\t/([^aeiouy])\\1l$/,\n\t\t\t/[^l]lien/,\n\t\t\t/^coa[dglx]./,\n\t\t\t/[^gq]ua[^auieo]/,\n\t\t\t/dnt$/,\n\t\t\t/uity$/,\n\t\t\t/ie(r|st)$/\n\t\t];\n\t\t\n\t\t// Single syllable prefixes & suffixes\n\t\tconst prefixSuffix = [\n\t\t\t/^un/,\n\t\t\t/^fore/,\n\t\t\t/ly$/,\n\t\t\t/less$/,\n\t\t\t/ful$/,\n\t\t\t/ers?$/,\n\t\t\t/ings?$/\n\t\t];\n\t\t\n\t\t// Remove prefixes & suffixes, and count how many were takes\n\t\tprefixSuffix.forEach(regex => {\n\t\t\tif (word.match(regex)) {\n\t\t\t\tword = word.replace(regex, '');\n\t\t\t\tprefixSuffixCount++;\n\t\t\t}\n\t\t});\n\t\t\n\t\tlet wordPartCount = word\n\t\t\t.split(/[^aeiouy]+/ig)\n\t\t\t.filter(wordPart => !!wordPart.replace(/\\s+/ig, '').length)\n\t\t\t.length;\n\t\t\n\t\t// Get preliminary syllable count\n\t\tsyllableCount = wordPartCount + prefixSuffixCount;\n\t\t\n\t\t// Some syllables do not follow normal rules, check for them\n\t\tsubSyllables.forEach(syllable => {\n\t\t\tword.match(syllable) && syllableCount--;\n\t\t});\n\t\t\n\t\taddSyllables.forEach(syllable => {\n\t\t\tword.match(syllable) && syllableCount++;\n\t\t});\n\t\t\n\t\treturn syllableCount || 1;\n\t}\n\t\n\t/**\n\t * Returns the length of the text\n\t *\n\t * @return {Number}\n\t */\n\ttextLength () {\n\t\treturn this.text.length;\n\t}\n\t\n\t/**\n\t * Counts the number of letters in the text\n\t *\n\t * @return {Number}\n\t */\n\tletterCount () {\n\t\treturn this.text.replace(/[^a-z]+/ig, '').length;\n\t}\n\t\n\t/**\n\t * Counts the number of sentences in the text\n\t *\n\t * @return {Number|number}\n\t */\n\tsentenceCount () {\n\t\t// FIXME: This will be tripped up by \"Mr.\" or \"U.K.\"\n\t\treturn this.text.replace(/[^.!?]/g, '').length || 1;\n\t}\n\t\n\t/**\n\t * Counts the number of words in the text\n\t *\n\t * @return {number}\n\t */\n\twordCount () {\n\t\treturn this.words().length || 1;\n\t}\n\t\n\t/**\n\t * Splits the text into an array of words.\n\t *\n\t * @return {Array}\n\t */\n\twords () {\n\t\tif (this._words) return this._words;\n\t\tthis._words = this.text.split(/[^a-z0-9']+/i);\n\t\treturn this._words;\n\t}\n\t\n\t/**\n\t * Calculates the average number of words per sentence\n\t *\n\t * @return {number}\n\t */\n\taverageWordsPerSentence () {\n\t\treturn this.wordCount() / this.sentenceCount();\n\t}\n\t\n\t/**\n\t * Calculates the average number of syllables per word\n\t *\n\t * @return {number}\n\t */\n\taverageSyllablesPerWord () {\n\t\tlet syllableCount = 0,\n\t\t\twordCount = this.wordCount();\n\t\t\n\t\tthis.text.split(/\\s+/).forEach(word => {\n\t\t\tsyllableCount += TextStatistics.syllableCount(word);\n\t\t});\n\t\t\n\t\treturn (syllableCount || 1) / (wordCount || 1);\n\t}\n\t\n\t/**\n\t * Counts the number of words in the text w/ three syllables\n\t *\n\t * @param {boolean} countProperNouns - If true, will ignore proper nouns or\n\t *     capitalized words.\n\t * @return {number}\n\t */\n\twordsWithThreeSyllables (countProperNouns = true) {\n\t\tlet longWordCount = 0;\n\t\t\n\t\tcountProperNouns = countProperNouns !== false;\n\t\t\n\t\tthis.text.split(/\\s+/).forEach(word => {\n\t\t\t// We don't count proper nouns or capitalized words if the\n\t\t\t// `countProperNouns` argument is set (defaults to true).\n\t\t\tif (!word.match(/^[A-Z]/) || countProperNouns) {\n\t\t\t\tif (this.syllableCount(word) > 2) longWordCount++;\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn longWordCount;\n\t}\n\t\n\t/**\n\t * Calculates the percentage of words with three syllables\n\t *\n\t * @param {boolean} countProperNouns - If true, will ignore proper nouns or\n\t *     capitalized words.\n\t * @return {number}\n\t */\n\tpercentageWordsWithThreeSyllables (countProperNouns = true) {\n\t\treturn (\n\t\t\tthis.wordsWithThreeSyllables(countProperNouns) / this.wordCount()\n        ) * 100;\n\t}\n\t\n}","/**\n * SEO A/B\n *\n * @author    Tam McDonald\n * @copyright Ether Creative 2017\n * @link      https://ethercreative.co.uk\n * @package   SEO\n * @since     2.0.0\n */\n\nimport { c } from \"./helpers\";\n\nclass SeoAB {\n\t\n\t// Variables\n\t// =========================================================================\n\t\n\tfieldSwitches = [];\n\tglobalDirection = 0;\n\t\n\t// SeoAB\n\t// =========================================================================\n\t\n\tconstructor () {\n\t\tthis.enabledSwitch = document.getElementById('seo_AbEnabled');\n\t\tthis.enabledSwitch.addEventListener('click', this.onEnableClick);\n\t\t\n\t\tthis.craftFieldsContainer = document.getElementById('fields');\n\t\tthis.fieldsContainer = document.getElementById('seoBFields');\n\t\t\n\t\tthis.fieldIds = this.getFieldIds();\n\t\t\n\t\tthis.onEnableClick();\n\t}\n\t\n\t// Actions\n\t// =========================================================================\n\t\n\t// Switches\n\t// -------------------------------------------------------------------------\n\t\n\tappendSwitches () {\n\t\tlet i = this.fieldIds.length;\n\t\twhile (i--) {\n\t\t\tconst field = document.getElementById(`fields-${this.fieldIds[i]}`);\n\t\t\tconst swtch = c(\"button\", {\n\t\t\t\tstyle: `\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t`,\n\t\t\t\tclick: this.onToggleField.bind(this, this.fieldIds[i]),\n\t\t\t}, \"AB\");\n\t\t\t\n\t\t\tthis.fieldSwitches.push(swtch);\n\t\t\tfield.appendChild(swtch);\n\t\t}\n\t\t\n\t\tdocument.getElementById('tabs').appendChild(\n\t\t\tc(\"button\", {\n\t\t\t\tstyle: `\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 10px;\n\t\t\t\t\tright: 24px;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t`,\n\t\t\t\tclick: this.onToggleAllClick,\n\t\t\t}, \"AB\")\n\t\t);\n\t}\n\t\n\tremoveSwitches () {\n\t\tlet i = this.fieldSwitches.length;\n\t\twhile (i--) {\n\t\t\tthis.fieldSwitches[i].parentNode.removeChild(\n\t\t\t\tthis.fieldSwitches[i]\n\t\t\t);\n\t\t}\n\t\t\n\t\tthis.fieldSwitches = [];\n\t}\n\t\n\t// Fields\n\t// -------------------------------------------------------------------------\n\t\n\t/**\n\t * Toggle the fields A/B\n\t *\n\t * @param {string} fieldId\n\t * @param {number} direction - 0 === B, 1 === A\n\t */\n\ttoggleField (fieldId, direction = 0) {\n\t\tconst craftField = document.getElementById(`fields-${fieldId}`)\n\t\t\t, seoAbField = document.getElementById(`seoAb-${fieldId}`);\n\t\t\n\t\tconst currentDirection =\n\t\t\t(craftField.parentNode.getAttribute('id') !== 'seoBFields')|0;\n\t\t\n\t\tif (direction === currentDirection) return;\n\t\t\n\t\tconst craftFieldTarget = document.createComment('craftFieldTarget')\n\t\t\t, seoAbFieldTarget = document.createComment('seoAbFieldTarget');\n\t\t\n\t\t// TODO: replace the btn w/ a switch\n\t\tconst btn = currentDirection\n\t\t\t? craftField.lastElementChild\n\t\t\t: seoAbField.lastElementChild;\n\t\t\n\t\t// Toggle the \"switch\"\n\t\tbtn.textContent = direction ? 'AB' : 'BA';\n\t\t\n\t\t// Move the switch to the visible field\n\t\tdirection ? craftField.appendChild(btn) : seoAbField.appendChild(btn);\n\t\t\n\t\tcraftField.parentNode.insertBefore(\n\t\t\tseoAbFieldTarget,\n\t\t\tcraftField\n\t\t);\n\t\tseoAbField.parentNode.insertBefore(\n\t\t\tcraftFieldTarget,\n\t\t\tseoAbField\n\t\t);\n\t\t\n\t\t// Change places!\n\t\tcraftFieldTarget.parentNode.insertBefore(\n\t\t\tcraftField,\n\t\t\tcraftFieldTarget\n\t\t);\n\t\tcraftFieldTarget.parentNode.removeChild(craftFieldTarget);\n\t\t\n\t\tseoAbFieldTarget.parentNode.insertBefore(\n\t\t\tseoAbField,\n\t\t\tseoAbFieldTarget\n\t\t);\n\t\tseoAbFieldTarget.parentNode.removeChild(seoAbFieldTarget);\n\t}\n\t\n\ttoggleAllFields (direction = 0) {\n\t\tthis.fieldIds.forEach(id => {\n\t\t\tthis.toggleField(id, direction);\n\t\t});\n\t}\n\t\n\t// Events\n\t// =========================================================================\n\t\n\t/**\n\t * Fired when the A/B Enable switch is toggled\n\t */\n\tonEnableClick = () => {\n\t\tconst isEnabled = !!this.enabledSwitch.lastElementChild.value;\n\t\tisEnabled ? this.appendSwitches() : this.removeSwitches();\n\t};\n\t\n\tonToggleField = (fieldId, e) => {\n\t\te.preventDefault();\n\t\t\n\t\tconst btn = e.target;\n\t\t// TODO: Make this check better\n\t\tthis.toggleField(fieldId, (btn.textContent === 'BA')|0);\n\t};\n\t\n\tonToggleAllClick = e => {\n\t\te.preventDefault();\n\t\tthis.globalDirection = (!this.globalDirection)|0;\n\t\te.target.textContent = this.globalDirection ? 'AB' : 'BA';\n\t\tthis.toggleAllFields(this.globalDirection);\n\t};\n\t\n\t// Helpers\n\t// =========================================================================\n\t\n\t/**\n\t * Gets the non-namespaced IDs of A/B-able fields\n\t *\n\t * @return {Array}\n\t */\n\tgetFieldIds () {\n\t\tconst ids = [];\n\t\t\n\t\tlet i = this.fieldsContainer.children.length;\n\t\twhile (i--) {\n\t\t\tlet id = this.fieldsContainer.children[i].getAttribute('id');\n\t\t\tid = id.replace('seoAb-', '');\n\t\t\tids.push(id);\n\t\t}\n\t\t\n\t\treturn ids;\n\t}\n\t\n}\n\nwindow.SeoAB = SeoAB;"],"names":["createElement","tag","attributes","children","elem","document","Object","entries","key","value","replace","trim","setAttribute","addEventListener","Array","isArray","map","child","appendChild","_","createTextNode","TextStatistics","text","cleanText","Math","round","this","averageWordsPerSentence","averageSyllablesPerWord","percentageWordsWithThreeSyllables","letterCount","wordCount","sentenceCount","sqrt","wordsWithThreeSyllables","length","words","_words","split","syllableCount","forEach","word","countProperNouns","longWordCount","match","_this","prefixSuffixCount","toLowerCase","problemWords","hasOwnProperty","regex","wordPartCount","filter","wordPart","syllable","SeoAB","fieldSwitches","globalDirection","onEnableClick","enabledSwitch","lastElementChild","appendSwitches","removeSwitches","onToggleField","fieldId","e","preventDefault","btn","target","toggleField","textContent","onToggleAllClick","toggleAllFields","getElementById","craftFieldsContainer","fieldsContainer","fieldIds","getFieldIds","i","field","swtch","c","bind","push","parentNode","removeChild","direction","craftField","seoAbField","currentDirection","getAttribute","craftFieldTarget","createComment","seoAbFieldTarget","insertBefore","id","ids","window"],"mappings":"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"}