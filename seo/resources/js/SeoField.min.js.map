{"version":3,"file":"SeoField.min.js","sources":["../../../resources/js/_helpers/createElement.js","../../../resources/js/_helpers/debounce.js","../../../resources/js/_helpers/capitalize.js","../../../resources/js/seo/Tabs.js","../../../resources/js/_helpers/TextStatistics.js","../../../resources/js/seo/FocusKeywords.js","../../../resources/js/seo/Snippet.js","../../../resources/js/SeoField.js"],"sourcesContent":["/**\n * ## Create Element\n * Quick and easy DOM element creation\n *\n * @param {string=} tag - The element tag\n * @param {object=} attributes - The attributes to add, mapping the key as\n *     the attribute name, and the value as its value. If the value is a\n *     function, it will be added as an event.\n * @param {(Array|*)=} children - An array of children (can be a mixture of\n *     Nodes to append, or other values to be stringified and appended\n *     as text).\n * @return {Element} - The created element\n */\nexport default function createElement (\n\ttag = \"div\",\n\tattributes = {},\n\tchildren = []\n) {\n\tconst elem = document.createElement(tag);\n\t\n\tfor (let [key, value] of Object.entries(attributes)) {\n\t\tif (typeof value === typeof (() => {})) {\n\t\t\telem.addEventListener(key, value);\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\telem.setAttribute(key, value);\n\t}\n\t\n\tif (!Array.isArray(children))\n\t\tchildren = [children];\n\t\n\tchildren.map(child => {\n\t\ttry {\n\t\t\telem.appendChild(child);\n\t\t} catch (_) {\n\t\t\telem.appendChild(document.createTextNode(child));\n\t\t}\n\t});\n\t\n\treturn elem;\n}","/**\n * ## Debounce\n *\n * A function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n *\n * If `immediate` is passed, trigger the function on the leading edge,\n * instead of the trailing.\n *\n * ```jsx\n *\n * // ...\n *\n * <input onInput={this.handleInput}>\n *\n * // ...\n *\n * handleInput = debounce(e => { /* ... *\\/ });\n *\n * ```\n *\n * @param {function} func - The function to debounce\n * @param {number=} wait - How long, in milliseconds, to delay between attempts\n * @param {boolean=} immediate - Fire on the leading edge\n * @returns {Function}\n */\nexport default function debounce (func, wait = 300, immediate = false) {\n\tlet timeout;\n\t\n\tif (wait === 0) {\n\t\treturn function () {\n\t\t\tfunc.apply(this, arguments);\n\t\t};\n\t}\n\t\n\treturn function () {\n\t\tconst context = this\n\t\t\t, args = arguments;\n\t\t\n\t\tif (args[0].constructor.name === \"SyntheticEvent\")\n\t\t\targs[0].persist();\n\t\t\n\t\tconst later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tconst callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n}","export default function capitalize (s) {\n\treturn s[0].toUpperCase() + s.slice(1);\n}","/**\n * SEO Tabs\n *\n * @author    Tam McDonald\n * @copyright Ether Creative 2017\n * @link      https://ethercreative.co.uk\n * @package   SEO\n * @since     1.5.0\n */\nexport default class Tabs {\n\t\n\t// Variables\n\t// =========================================================================\n\t\n\tactiveTab = { tab: null, page: null };\n\tpages = {};\n\t\n\t// Constructor\n\t// =========================================================================\n\t\n\tconstructor (namespace) {\n\t\tthis.namespace = namespace;\n\t\t\n\t\t// Variables\n\t\tconst tabs = [].slice.call(\n\t\t\tdocument.getElementById(this.namespace + \"Tabs\")\n\t\t\t        .getElementsByTagName(\"a\")\n\t\t);\n\t\t\n\t\tthis.pages = [].slice.call(\n\t\t\tdocument.getElementById(this.namespace + \"Pages\").children\n\t\t).reduce((a, b) => {\n\t\t\ta[b.dataset.seoTab] = b;\n\t\t\treturn a;\n\t\t}, {});\n\t\t\n\t\t// Set default active\n\t\tthis.setActiveTab(tabs[0]);\n\t\t\n\t\t// Events\n\t\ttabs.forEach(tab => {\n\t\t\ttab.addEventListener(\"click\", e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.setActiveTab(tab);\n\t\t\t});\n\t\t});\n\t}\n\t\n\t// Misc\n\t// =========================================================================\n\t\n\tsetActiveTab (tab) {\n\t\tconst name = tab.dataset.seoTab;\n\t\t\n\t\tif (this.activeTab.tab) {\n\t\t\tthis.activeTab.tab.classList.remove(\"active\");\n\t\t\tthis.activeTab.page.classList.remove(\"active\");\n\t\t}\n\t\t\n\t\tthis.activeTab = {\n\t\t\ttab,\n\t\t\tpage: this.pages[name],\n\t\t};\n\t\t\n\t\tthis.activeTab.tab.classList.add(\"active\");\n\t\tthis.activeTab.page.classList.add(\"active\");\n\t}\n\t\n}","/**\n * TextStatistics.js\n * Christopher Giffard (2012)\n * 1:1 API Fork of TextStatistics.php by Dave Child (Thanks mate!)\n * https://github.com/DaveChild/Text-Statistics\n *\n * Modified & re-written for ES6 by Tam<hi@tam.sx>\n *\n * TODO: Ensure Rollup removes any functions we're not using\n */\n\nexport default class TextStatistics {\n\t\n\tconstructor (text) {\n\t\tthis.text = text ? TextStatistics.cleanText(text) : text;\n\t}\n\t\n\t// Statistics\n\t// =========================================================================\n\t\n\t/**\n\t * Calculates the Flesch Kincaid reading ease score\n\t *\n\t * @return {number}\n\t */\n\tfleschKincaidReadingEase () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t206.835\n\t\t\t\t- (1.015 * this.averageWordsPerSentence())\n\t\t\t\t- (84.6 * this.averageSyllablesPerWord())\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Flesch Kincaid grade level\n\t *\n\t * @return {number}\n\t */\n\tfleschKincaidGradeLevel () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(0.39 * this.averageWordsPerSentence())\n\t\t\t\t+ (11.8 * this.averageSyllablesPerWord())\n\t\t\t\t- 15.59\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Gunning Fog score\n\t *\n\t * @return {number}\n\t */\n\tgunningFogScore () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(\n\t\t\t\t\tthis.averageWordsPerSentence()\n\t\t\t\t\t+ this.percentageWordsWithThreeSyllables(false)\n\t\t\t\t) * 0.4\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Coleman Liau index\n\t *\n\t * @return {number}\n\t */\n\tcolemanLiauIndex () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(\n\t\t\t\t\t5.89\n\t\t\t\t\t* (this.letterCount() / this.wordCount())\n\t\t\t\t) - (\n\t\t\t\t\t0.3\n\t\t\t\t\t* (this.sentenceCount() / this.wordCount())\n\t\t\t\t) - 15.8\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Smog index\n\t *\n\t * @return {number}\n\t */\n\tsmogIndex () {\n\t\treturn Math.round(\n\t\t\t1.043\n\t\t\t* Math.sqrt(\n\t\t\t\t(\n\t\t\t\t\tthis.wordsWithThreeSyllables()\n\t\t\t\t\t* (30 / this.sentenceCount())\n\t\t\t\t) + 3.1291\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Automated Readability index\n\t *\n\t * @return {number}\n\t */\n\tautomatedReadabilityIndex () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(\n\t\t\t\t\t4.71\n\t\t\t\t\t* (this.letterCount() / this.wordCount())\n\t\t\t\t) + (\n\t\t\t\t\t0.5\n\t\t\t\t\t* (this.wordCount() / this.sentenceCount())\n\t\t\t\t) - 21.43\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t// Helpers\n\t// =========================================================================\n\t\n\t/**\n\t * Cleans the text for processing\n\t *\n\t * @param {string} text - Text to clean\n\t * @return {string}\n\t */\n\tstatic cleanText (text) {\n\t\t// All these tags should be preceded by a full stop\n\t\t[\"li\", \"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"dd\"].forEach(tag => {\n\t\t\ttext.replace(`</${tag}>`, \".\");\n\t\t});\n\t\t\n\t\ttext = text\n\t\t\t\t// Strip tags\n\t\t\t\t.replace(/<[^>]+>/g, \"\")\n\t\t\t\t\n\t\t\t\t// Replace commas, hyphens etc (count them as spaces)\n\t\t\t\t.replace(/[,:;()-]/g, \" \")\n\t\t\t\t\n\t\t\t\t// Unify terminators\n\t\t        .replace(/[.!?]/g, \".\")\n\t\t\t\t\n\t\t\t\t// Strip leading whitespace\n\t\t\t\t.replace(/^\\s+/g,\"\")\n\t\t\t\t\n\t\t\t\t// Replace new lines with spaces\n\t\t\t\t.replace(/[ ]*(\\n|\\r\\n|\\r)[ ]*/g,\" \")\n\t\t\t\t\n\t\t\t\t// Check for duplicated terminators\n\t\t\t\t.replace(/([.])[. ]+/g,\".\")\n\t\t\t\t\n\t\t\t\t// Pad sentence terminators\n\t\t\t\t.replace(/[ ]*([.])/g,\". \")\n\t\t\t\t\n\t\t\t\t// Remove multiple spaces\n\t\t\t\t.replace(/\\s+/g,\" \")\n\t\t\t\t\n\t\t\t\t// Strip trailing whitespace\n\t\t\t\t.replace(/\\s+$/g,\"\")\n\t\t\t\t\n\t\t\t\t// Strip apostrophe\n\t\t\t\t.replace(/'/g,\"\");\n\t\t\n\t\t// Add final terminator, just in case it's missing\n\t\ttext += \".\";\n\t\t\n\t\treturn text;\n\t}\n\t\n\t/**\n\t * Counts the number of syllables a given word\n\t *\n\t * @param {string} word\n\t * @return {number}\n\t */\n\tstatic syllableCount (word) {\n\t\tlet syllableCount = 0,\n\t\t\tprefixSuffixCount = 0;\n\t\t\n\t\t// Prepare word - make lower case & remove non-word characters\n\t\tword = word.toLowerCase().replace(/[^a-z]/g, \"\");\n\t\t\n\t\t// Specific common exceptions that don't follow the rule set below are\n\t\t// handled individually.\n\t\t// Array of problem words (with word as key, syllable count as value)\n\t\tconst problemWords = {\n\t\t\t\"simile\":       3,\n\t\t\t\"forever\":      3,\n\t\t\t\"shoreline\":    2,\n\t\t};\n\t\t\n\t\t// Return if we've hit a problem word\n\t\tif (problemWords.hasOwnProperty(word)) return problemWords[word];\n\t\t\n\t\t// Syllables that would be counted as two, but should be one\n\t\tconst subSyllables = [\n\t\t\t/cial/,\n\t\t\t/tia/,\n\t\t\t/cius/,\n\t\t\t/cious/,\n\t\t\t/giu/,\n\t\t\t/ion/,\n\t\t\t/iou/,\n\t\t\t/sia$/,\n\t\t\t/[^aeiuoyt]{2,}ed$/,\n\t\t\t/.ely$/,\n\t\t\t/[cg]h?e[rsd]?$/,\n\t\t\t/rved?$/,\n\t\t\t/[aeiouy][dt]es?$/,\n\t\t\t/[aeiouy][^aeiouydt]e[rsd]?$/,\n\t\t\t/^[dr]e[aeiou][^aeiou]+$/,      // Sorts out deal, deign etc.\n\t\t\t/[aeiouy]rse$/,                 // Purse, hearse\n\t\t];\n\t\t\n\t\t// Syllables that would be counted as one, but should be two\n\t\tconst addSyllables = [\n\t\t\t/ia/,\n\t\t\t/riet/,\n\t\t\t/dien/,\n\t\t\t/iu/,\n\t\t\t/io/,\n\t\t\t/ii/,\n\t\t\t/[aeiouym]bl$/,\n\t\t\t/[aeiou]{3}/,\n\t\t\t/^mc/,\n\t\t\t/ism$/,\n\t\t\t/([^aeiouy])\\1l$/,\n\t\t\t/[^l]lien/,\n\t\t\t/^coa[dglx]./,\n\t\t\t/[^gq]ua[^auieo]/,\n\t\t\t/dnt$/,\n\t\t\t/uity$/,\n\t\t\t/ie(r|st)$/\n\t\t];\n\t\t\n\t\t// Single syllable prefixes & suffixes\n\t\tconst prefixSuffix = [\n\t\t\t/^un/,\n\t\t\t/^fore/,\n\t\t\t/ly$/,\n\t\t\t/less$/,\n\t\t\t/ful$/,\n\t\t\t/ers?$/,\n\t\t\t/ings?$/\n\t\t];\n\t\t\n\t\t// Remove prefixes & suffixes, and count how many were takes\n\t\tprefixSuffix.forEach(regex => {\n\t\t\tif (word.match(regex)) {\n\t\t\t\tword = word.replace(regex, \"\");\n\t\t\t\tprefixSuffixCount++;\n\t\t\t}\n\t\t});\n\t\t\n\t\tlet wordPartCount = word\n\t\t\t.split(/[^aeiouy]+/ig)\n\t\t\t.filter(wordPart => !!wordPart.replace(/\\s+/ig,\"\").length)\n\t\t\t.length;\n\t\t\n\t\t// Get preliminary syllable count\n\t\tsyllableCount = wordPartCount + prefixSuffixCount;\n\t\t\n\t\t// Some syllables do not follow normal rules, check for them\n\t\tsubSyllables.forEach(syllable => {\n\t\t\tword.match(syllable) && syllableCount--;\n\t\t});\n\t\t\n\t\taddSyllables.forEach(syllable => {\n\t\t\tword.match(syllable) && syllableCount++;\n\t\t});\n\t\t\n\t\treturn syllableCount || 1;\n\t}\n\t\n\t/**\n\t * Returns the length of the text\n\t *\n\t * @return {Number}\n\t */\n\ttextLength () {\n\t\treturn this.text.length;\n\t}\n\t\n\t/**\n\t * Counts the number of letters in the text\n\t *\n\t * @return {Number}\n\t */\n\tletterCount () {\n\t\treturn this.text.replace(/[^a-z]+/ig, \"\").length;\n\t}\n\t\n\t/**\n\t * Counts the number of sentences in the text\n\t *\n\t * @return {Number|number}\n\t */\n\tsentenceCount () {\n\t\t// FIXME: This will be tripped up by \"Mr.\" or \"U.K.\"\n\t\treturn this.text.replace(/[^.!?]/g, \"\").length || 1;\n\t}\n\t\n\t/**\n\t * Counts the number of words in the text\n\t *\n\t * @return {number}\n\t */\n\twordCount () {\n\t\treturn this.words().length || 1;\n\t}\n\t\n\t/**\n\t * Splits the text into an array of words.\n\t *\n\t * @return {Array}\n\t */\n\twords () {\n\t\tif (this._words) return this._words;\n\t\tthis._words = this.text.split(/[^a-z0-9']+/i);\n\t\treturn this._words;\n\t}\n\t\n\t/**\n\t * Calculates the average number of words per sentence\n\t *\n\t * @return {number}\n\t */\n\taverageWordsPerSentence () {\n\t\treturn this.wordCount() / this.sentenceCount();\n\t}\n\t\n\t/**\n\t * Calculates the average number of syllables per word\n\t *\n\t * @return {number}\n\t */\n\taverageSyllablesPerWord () {\n\t\tlet syllableCount = 0,\n\t\t\twordCount = this.wordCount();\n\t\t\n\t\tthis.text.split(/\\s+/).forEach(word => {\n\t\t\tsyllableCount += this.syllableCount(word);\n\t\t});\n\t\t\n\t\treturn (syllableCount || 1) / (wordCount || 1);\n\t}\n\t\n\t/**\n\t * Counts the number of words in the text w/ three syllables\n\t *\n\t * @param {boolean} countProperNouns - If true, will ignore proper nouns or\n\t *     capitalized words.\n\t * @return {number}\n\t */\n\twordsWithThreeSyllables (countProperNouns = true) {\n\t\tlet longWordCount = 0;\n\t\t\n\t\tcountProperNouns = countProperNouns !== false;\n\t\t\n\t\tthis.text.split(/\\s+/).forEach(word => {\n\t\t\t// We don't count proper nouns or capitalized words if the\n\t\t\t// `countProperNouns` argument is set (defaults to true).\n\t\t\tif (!word.match(/^[A-Z]/) || countProperNouns) {\n\t\t\t\tif (this.syllableCount(word) > 2) longWordCount++;\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn longWordCount;\n\t}\n\t\n\t/**\n\t * Calculates the percentage of words with three syllables\n\t *\n\t * @param {boolean} countProperNouns - If true, will ignore proper nouns or\n\t *     capitalized words.\n\t * @return {number}\n\t */\n\tpercentageWordsWithThreeSyllables (countProperNouns = true) {\n\t\treturn (\n\t\t\tthis.wordsWithThreeSyllables(countProperNouns) / this.wordCount()\n        ) * 100;\n\t}\n\t\n}","/**\n * Focus Keywords\n *\n * @author    Tam McDonald\n * @copyright Ether Creative 2017\n * @link      https://ethercreative.co.uk\n * @package   SEO\n * @since     1.5.0\n */\n\nimport { TextStatistics, fail, t, capitalize } from \"../helpers\";\n\nconst SEO_RATING = {\n\tNONE: \"neutral\",\n\tGOOD: \"good\",\n\tAVERAGE: \"average\",\n\tPOOR: \"poor\",\n};\n\n// TODO: Make translatable\nconst SEO_REASONS = {\n\ttitleLengthFailMin: \"The title contains {l} characters which is less than the recommended minimum of 40 characters.\",\n\ttitleLengthFailMax: \"The title contains {l} characters which is greater than the recommended maximum of 60 characters.\",\n\ttitleLengthSuccess: \"The title is between the recommended minimum and maximum length.\",\n\t\n\ttitleKeywordFail: \"The title does not contain the keyword. Try adding it near the beginning of the title.\",\n\ttitleKeywordSuccess: \"The title contains the keyword near the beginning.\",\n\ttitleKeywordPosFail: \"The title contains the keyword, but not near the beginning. Try to move it closer to the start of the title.\",\n\t\n\tslugFail: \"The URL does not contain the keyword. Try adding it to the slug.\",\n\tslugSuccess: \"The URL contains the keyword.\",\n\t\n\tdescFail: \"The description does not contain the keyword. Try adding it near the beginning of the description.\",\n\tdescSuccess: \"The description contains the keyword.\",\n\t\n\twordCountFail: \"Your text contains {l} words, this is less than the recommended 300 word minimum.\",\n\twordCountSuccess: \"Your text contains {l} words, this is more than the recommended 300 word minimum.\",\n\t\n\tfirstParagraphFail: \"The keyword does not appear in the first paragraph of your text. Try adding it.\",\n\tfirstParagraphSuccess: \"The keyword appears in the first paragraph of your text.\",\n\t\n\timagesFail: \"Less than half of the images have alt tags containing the keyword, try adding it to more images.\",\n\timagesOk: \"Half or more of the images have alt tags containing the keyword. To improve this, try adding keywords to all the images alt tags.\",\n\timagesSuccess: \"All of the images have alt tags containing the keyword.\",\n\t\n\tlinksFail: \"The page does not contain any outgoing links. Try adding some.\",\n\tlinksSuccess: \"The page contains outgoing links.\",\n\t\n\theadingsFail: \"The page does not contain any headings that contain the keyword. Try adding some with the keyword.\",\n\theadingsOk: \"The page contains some lower importance headings that contain the keyword. Try adding the keyword to some h2's.\",\n\theadingsSuccess: \"The page contains higher importance headings with the keyword.\",\n\t\n\tdensityFail: \"The keyword does not appear in the text. It is important to include it in your content.\",\n\tdensityFailUnder: \"The keyword density is {d}%, which is well under the advised 2.5%. Try increasing the number of times the keyword is used.\",\n\tdensityOk: \"The keyword density is {d}%, which is over the advised 2.5%. The keyword appears {c} times.\",\n\tdensitySuccess: \"The keyword density is {d}%, which is near the advised 2.5%.\",\n\t\n\tfleschFail: \"The Flesch Reading ease score is {l} which is considered best for university graduates. Try reducing your sentence length to improve readability.\",\n\tfleschOk: \"The Flesch Reading ease score is {l} which is average, and considered easily readable by most users.\",\n\tfleschSuccess: \"The Flesch Reading ease score is {l} meaning your content is readable by all ages.\",\n};\n\nexport default class FocusKeywords {\n\t\n\tactiveKeywordIndex = null;\n\t\n\tconstructor (namespace, SEO) {\n\t\tthis.namespace = namespace;\n\t\tthis.SEO = SEO;\n\t\t\n\t\tthis.keywordsField = document.getElementById(`${namespace}Keywords`);\n\t\tthis.scoreField = document.getElementById(`${namespace}Score`);\n\t\t\n\t\tthis.initInput();\n\t\tthis.initKeywords();\n\t}\n\t\n\t// Initializers\n\t// =========================================================================\n\t\n\t/**\n\t * Initializes the keywords input\n\t */\n\tinitInput () {\n\t\t// Variables\n\t\tthis.inputWrap =\n\t\t\tdocument.getElementById(this.namespace + \"KeywordsInput\");\n\t\tthis.input = this.inputWrap.lastElementChild;\n\t\t\n\t\t// Events\n\t\tthis.inputWrap.addEventListener(\"click\", this.onInputWrapClick);\n\t\tthis.input.addEventListener(\"focus\", this.onInputFocus);\n\t\tthis.input.addEventListener(\"blur\", this.onInputBlur);\n\t\tthis.input.addEventListener(\"keydown\", this.onInputKeyDown);\n\t}\n\t\n\t/**\n\t * Initializes the keywords (if any exist)\n\t */\n\tinitKeywords () {\n\t\t// Set initial keywords, adding the index variable\n\t\tthis.keywords = JSON.parse(this.keywordsField.value).map((k, i) => ({\n\t\t\t...k,\n\t\t\tindex: i,\n\t\t}));\n\t\t\n\t\t// Initial keywords\n\t\tthis.keywords.forEach(({ keyword, score }, i) => {\n\t\t\tthis.createKeyword(keyword, score, i);\n\t\t});\n\t\t\n\t\t// Set the first keyword (if we have one) to be active\n\t\tthis.keywords.length && this.setActiveKeyword(0);\n\t\t\n\t\tthis.onKeywordsChange();\n\t}\n\t\n\t// Actions\n\t// =========================================================================\n\t\n\t/**\n\t * Sets the active keyword & triggers an update to the keyword details\n\t *\n\t * @param index\n\t */\n\tsetActiveKeyword (index) {\n\t\tif (\n\t\t\tthis.activeKeywordIndex !== null\n\t\t    && this.keywords.length > this.activeKeywordIndex\n\t\t) {\n\t\t\tthis.getKeywordElementAtIndex(this.activeKeywordIndex)\n\t\t\t    .classList.remove(\"active\");\n\t\t}\n\t\t\n\t\tif (this.keywords.length > index) {\n\t\t\tthis.activeKeywordIndex = index|0;\n\t\t\tthis.getKeywordElementAtIndex(this.activeKeywordIndex)\n\t\t\t    .classList.add(\"active\");\n\t\t}\n\t\t\n\t\t// TODO: Trigger results update\n\t}\n\t\n\t// Events\n\t// =========================================================================\n\t\n\t/**\n\t * Update the hidden inputs when the keywords change\n\t */\n\tonKeywordsChange = () => {\n\t\tconst ratings = Object.values(SEO_RATING).reduce((a, b) => {\n\t\t\ta[b] = 0;\n\t\t\treturn a;\n\t\t}, {});\n\t\t\n\t\tthis.keywordsField.value = JSON.stringify(\n\t\t\tthis.keywords.map(({ keyword, score }) => {\n\t\t\t\tratings[score]++;\n\t\t\t\treturn { keyword, score };\n\t\t\t})\n\t\t);\n\t\t\n\t\tthis.scoreField.value = Object.keys(ratings).reduce((a, b) => {\n\t\t\treturn ratings[b] > a.score ? { rating: b, score: ratings[b] } : a;\n\t\t}, { rating: SEO_RATING.NONE, score: 0 }).rating;\n\t};\n\t\n\t// Events: Keywords\n\t// -------------------------------------------------------------------------\n\t\n\t/**\n\t * Fixed when a keyword element is clicked.\n\t * Will set that keyword to be the active one.\n\t *\n\t * @param {Event} e\n\t */\n\tonKeywordClick = e => {\n\t\te.preventDefault();\n\t\tthis.setActiveKeyword(e.target.dataset.index);\n\t};\n\t\n\t/**\n\t * Fired when the [x] in the keyword element is clicked.\n\t * Will remove the element and the keyword from `this.keywords`.\n\t *\n\t * @param {Event} e\n\t */\n\tonKeywordRemoveClick = e => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\t\n\t\tconst i = e.target.parentNode.parentNode.dataset.index|0;\n\t\t\n\t\tthis.activeKeywordIndex === i && this.setActiveKeyword(0);\n\t\t\n\t\t// Remove keyword\n\t\tconst elem = this.getKeywordElementAtIndex(i);\n\t\telem.parentNode.removeChild(elem);\n\t\t\n\t\tthis.keywords.splice(i, 1);\n\t\t\n\t\t// Re-map indexes\n\t\tthis.keywords = this.keywords.map((k, i) => {\n\t\t\tif (this.activeKeywordIndex === k.index)\n\t\t\t\tthis.activeKeywordIndex = i;\n\t\t\t\n\t\t\tthis.getKeywordElementAtIndex(i)\n\t\t\t    .setAttribute(\"data-index\", i);\n\t\t\t\n\t\t\treturn {\n\t\t\t\t...k,\n\t\t\t\tindex: i,\n\t\t\t};\n\t\t});\n\t\t\n\t\tthis.onKeywordsChange();\n\t};\n\t\n\t// Events: Keywords Input\n\t// -------------------------------------------------------------------------\n\t\n\t/**\n\t * Fired when the keywords input wrapper is clicked\n\t *\n\t * @param {Event} e\n\t */\n\tonInputWrapClick = e => {\n\t\tif (e.target === this.inputWrap)\n\t\t\tthis.input.focus();\n\t};\n\t\n\t/**\n\t * Fired when the keywords input is focused\n\t */\n\tonInputFocus = () => {\n\t\tthis.inputWrap.classList.add(\"focused\");\n\t};\n\t\n\t/**\n\t * Fired when the keywords input is blurred\n\t */\n\tonInputBlur = () => {\n\t\tthis.inputWrap.classList.remove(\"focused\");\n\t};\n\t\n\t/**\n\t * Fired when a key is pressed while the keywords input is focused\n\t *\n\t * @param {Event} e\n\t */\n\tonInputKeyDown = e => {\n\t\tif (e.keyCode !== 13) return;\n\t\te.preventDefault();\n\t\t\n\t\tconst nextKeyword = e.target.value.trim();\n\t\tlet dupe = false;\n\t\t\n\t\tif (!nextKeyword) return;\n\t\t\n\t\t// Check if this is a duplicate and activate original if it is\n\t\tthis.keywords.forEach(({ keyword, index }) => {\n\t\t\tif (nextKeyword === keyword) {\n\t\t\t\tdupe = true;\n\t\t\t\tthis.setActiveKeyword(index);\n\t\t\t}\n\t\t});\n\t\t\n\t\t// If it's not a duplicate, create a new keyword\n\t\t!dupe && this.createKeyword(nextKeyword);\n\t\t\n\t\t// Reset the input\n\t\te.target.value = \"\";\n\t};\n\t\n\t// Helpers\n\t// =========================================================================\n\t\n\t/**\n\t * Creates a rating element\n\t *\n\t * @param {string} level\n\t * @param {string=} tag\n\t * @return {Element}\n\t */\n\tcreateRating = (level, tag = \"div\") => {\n\t\tconst name = capitalize(level);\n\t\t\n\t\treturn t(tag, {\n\t\t\t\"class\": `seo--light ${level}`,\n\t\t\t\"title\": name,\n\t\t}, name);\n\t};\n\t\n\t/**\n\t * Creates a new keyword and adds it to the keyword input\n\t *\n\t * @param {string} keyword\n\t * @param {string=} score\n\t * @param {number|null=} index\n\t */\n\tcreateKeyword = (keyword, score = \"neutral\", index = null) => {\n\t\tconst nextIndex = index !== null ? index : this.keywords.length;\n\t\t\n\t\tconst elem = t(\"a\", {\n\t\t\thref: \"#\",\n\t\t\tclick: this.onKeywordClick,\n\t\t\t\"data-index\": nextIndex,\n\t\t}, [\n\t\t\tthis.createRating(score, \"span\"),\n\t\t\tkeyword,\n\t\t\tt(\"object\", {}, t(\"a\", {\n\t\t\t\thref: \"#\",\n\t\t\t\ttitle: \"Remove\",\n\t\t\t\tclick: this.onKeywordRemoveClick,\n\t\t\t}, \"Remove\"))\n\t\t]);\n\t\t\n\t\tthis.inputWrap.insertBefore(\n\t\t\telem,\n\t\t\tthis.inputWrap.lastElementChild\n\t\t);\n\t\t\n\t\tif (index === null) {\n\t\t\tthis.keywords.push({\n\t\t\t\tkeyword,\n\t\t\t\tscore,\n\t\t\t\tindex: nextIndex,\n\t\t\t});\n\t\t\t\n\t\t\tthis.setActiveKeyword(nextIndex);\n\t\t\tthis.onKeywordsChange();\n\t\t}\n\t};\n\t\n\t/**\n\t * Gets a keyword element at a given index\n\t *\n\t * @param {number} index\n\t * @return {HTMLElement}\n\t */\n\tgetKeywordElementAtIndex = (index) => this.inputWrap.children[index];\n\t\n}","/* globals Craft */\n\nimport { debounce } from \"../helpers\";\n\nexport default class Snippet {\n\t\n\tconstructor (namespace, SEO) {\n\t\tthis.namespace = namespace;\n\t\tthis.SEO = SEO;\n\t\t\n\t\tthis.titleField = document.getElementById(`${namespace}Title`);\n\t\tthis.slugField  = document.getElementById(`${namespace}Slug`);\n\t\tthis.descField  = document.getElementById(`${namespace}Description`);\n\t\t\n\t\tthis.SEO.snippetFields = {\n\t\t\ttitle: this.titleField,\n\t\t\tslug:  this.slugField,\n\t\t\tdesc:  this.descField,\n\t\t};\n\t\t\n\t\tthis.title();\n\t\tthis.slugField && this.slug();\n\t\tthis.desc();\n\t}\n\t\n\t/**\n\t * Sync up the main title input with the SEO one\n\t * (if it's a new entry, or we don't have a title)\n\t *\n\t * TODO: Alert the user if they change the main title, but not the SEO one\n\t * TODO: If the SEO title matches the main title (sans suffix), keep syncing\n\t */\n\ttitle () {\n\t\tconst mainTitleField = document.getElementById(\"title\");\n\t\t\n\t\tif (\n\t\t\t(\n\t\t\t\t!mainTitleField\n\t\t\t\t|| !this.titleField.classList.contains(\"clean\")\n\t\t\t\t|| !this.SEO.options.isNew\n\t\t\t) && this.titleField.value.trim() !== \"\"\n\t\t) return;\n\t\t\n\t\t// This should be just the suffix (if there is one)\n\t\tconst initial = this.titleField.value;\n\t\t\n\t\tconst onMainTitleFieldInput = () => {\n\t\t\tthis.titleField.value = `${mainTitleField.value} ${initial}`;\n\t\t};\n\t\t\n\t\tconst onTitleInput = () => {\n\t\t\tthis.titleField.classList.remove(\"clean\");\n\t\t\t\n\t\t\tmainTitleField.removeEventListener(\n\t\t\t\t\"input\",\n\t\t\t\tonMainTitleFieldInput,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\t\n\t\t\tthis.titleField.removeEventListener(\"input\", onTitleInput, false);\n\t\t};\n\t\t\n\t\tmainTitleField.addEventListener(\n\t\t\t\"input\",\n\t\t\tonMainTitleFieldInput,\n\t\t\tfalse\n\t\t);\n\t\t\n\t\tthis.titleField.addEventListener(\"input\", onTitleInput, false);\n\t}\n\t\n\t/**\n\t * Sync up the SEO slug with crafts\n\t * (Purely aesthetic, but nice to have)\n\t */\n\tslug () {\n\t\tconst mainSlugField = document.getElementById(\"slug\");\n\t\t\n\t\tif (!mainSlugField) return;\n\t\t\n\t\tthis.slugField.textContent = mainSlugField.value;\n\t\t\n\t\tconst onSlugChange = () => {\n\t\t\tthis.slugField.textContent = mainSlugField.value;\n\t\t};\n\t\t\n\t\tmainSlugField.addEventListener(\"input\", onSlugChange);\n\t\t\n\t\t// Slug generation has a debounce that we need to account for to keep\n\t\t// the slugs in sync\n\t\tdocument.getElementById(\"title\")\n\t\t        .addEventListener(\"input\", debounce(onSlugChange, 500));\n\t}\n\t\n\t/**\n\t * Adjust the height of the description TextArea to ensure it never scrolls,\n\t * and handle descriptions that are longer than the recommended length.\n\t */\n\tdesc () {\n\t\tconst adjustHeight = () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.descField.style.height = \"\";\n\t\t\t\tthis.descField.style.height = this.descField.scrollHeight + \"px\";\n\t\t\t}, 1);\n\t\t};\n\t\t\n\t\t// Prevent line breaks\n\t\tthis.descField.addEventListener(\"keydown\", e => {\n\t\t\tif (e.keyCode === 13) e.preventDefault();\n\t\t});\n\t\t\n\t\t// Cleanse line breaks & check length\n\t\tthis.descField.addEventListener(\"input\", () => {\n\t\t\tthis.descField.value =\n\t\t\t\tthis.descField.value.replace(/(\\r\\n|\\r|\\n)/gm, \" \");\n\t\t\t\n\t\t\tif (this.descField.value.length > 160)\n\t\t\t\tthis.descField.classList.add(\"invalid\");\n\t\t\telse\n\t\t\t\tthis.descField.classList.remove(\"invalid\");\n\t\t\t\n\t\t\tadjustHeight();\n\t\t});\n\t\t\n\t\t// Adjust height TextArea size changes\n\t\t// ---------------------------------------------------------------------\n\t\t\n\t\t// On tab change\n\t\tif (document.getElementById(\"tabs\")) {\n\t\t\tconst tabs = document.querySelectorAll(\"#tabs a.tab\");\n\t\t\tfor (let i = 0; i < tabs.length; i++) {\n\t\t\t\ttabs[i].addEventListener(\"click\", adjustHeight);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// On open / close live preview\n\t\tif (Craft.livePreview) {\n\t\t\tCraft.livePreview.on(\"enter\", adjustHeight);\n\t\t\tCraft.livePreview.on(\"exit\", adjustHeight);\n\t\t}\n\t\t\n\t\t// On window resize\n\t\twindow.addEventListener(\"resize\", adjustHeight);\n\t\t\n\t\t// Set initial height\n\t\tadjustHeight();\n\t}\n\t\n}","/**\n * SEO for Craft CMS\n *\n * @author    Tam McDonald\n * @copyright Ether Creative 2017\n * @link      https://ethercreative.co.uk\n * @package   SEO\n * @since     1.5.0\n */\n\nimport Tabs from \"./seo/Tabs\";\nimport FocusKeywords from \"./seo/FocusKeywords\";\nimport Snippet from \"./seo/Snippet\";\n\nclass SeoField {\n\t\n\t// Variables\n\t// =========================================================================\n\t\n\tstatic isInitialized = false;\n\t\n\t// Set in Snippet\n\tsnippetFields = {\n\t\ttitle: null,\n\t\tslug:  null,\n\t\tdesc:  null,\n\t};\n\t\n\t// Overwritten, but useful for auto-complete\n\toptions = {\n\t\thasPreview: false,\n\t\tisNew: false,\n\t};\n\t\n\t// SeoField\n\t// =========================================================================\n\t\n\t/**\n\t * Initialize the SEO field\n\t *\n\t * @param {string} namespace - Field namespace\n\t * @param {object} options - The options for the SEO field\n\t * @constructor\n\t */\n\tconstructor (namespace, options) {\n\t\tif (SeoField.watchForSeoField(namespace)) return;\n\t\t\n\t\tthis.options = options;\n\t\t\n\t\tnew Tabs(namespace);\n\t\tnew Snippet(namespace, this);\n\t\t// TODO: Social\n\t\t\n\t\tif (!this.options.hasPreview) return;\n\t\t\n\t\tnew FocusKeywords(namespace, this);\n\t\t// TODO: Keyword report\n\t}\n\t\n\t// Helpers\n\t// =========================================================================\n\t\n\t/**\n\t * Ensure we've only got one active SEO field\n\t * (particularly useful for SEO fields in quick edit HUDs)\n\t *\n\t * @param {string} namespace\n\t * @returns {boolean}\n\t */\n\tstatic watchForSeoField (namespace) {\n\t\tif (SeoField.isInitialized) return true;\n\t\t\n\t\tSeoField.isInitialized = true;\n\t\tconst field = document.getElementById(`${namespace}Field`);\n\t\t\n\t\tconst observer = new MutationObserver(mutations => {\n\t\t\tmutations.forEach(mutation => {\n\t\t\t\tif (mutation.removedNodes.length) {\n\t\t\t\t\tSeoField.isInitialized = false;\n\t\t\t\t\tobserver.disconnect();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t\n\t\tobserver.observe(field.parentNode, { childList: true });\n\t\t\n\t\treturn false;\n\t}\n\t\n}\n\nwindow.SeoField = SeoField;"],"names":["createElement","tag","attributes","children","elem","document","Object","entries","key","value","setAttribute","addEventListener","Array","isArray","map","appendChild","child","_","createTextNode","debounce","func","wait","immediate","timeout","apply","this","arguments","context","args","constructor","name","persist","callNow","setTimeout","capitalize","s","toUpperCase","slice","Tabs","namespace","activeTab","tab","page","pages","tabs","call","getElementById","getElementsByTagName","reduce","a","b","dataset","seoTab","setActiveTab","forEach","preventDefault","classList","remove","add","TextStatistics","text","cleanText","Math","round","averageWordsPerSentence","averageSyllablesPerWord","percentageWordsWithThreeSyllables","letterCount","wordCount","sentenceCount","sqrt","wordsWithThreeSyllables","length","replace","words","_words","split","syllableCount","_this","word","countProperNouns","longWordCount","match","_this2","prefixSuffixCount","toLowerCase","problemWords","hasOwnProperty","subSyllables","addSyllables","regex","wordPartCount","filter","wordPart","syllable","SEO_RATING","FocusKeywords","SEO","activeKeywordIndex","onKeywordsChange","ratings","values","keywordsField","JSON","stringify","keywords","keyword","score","scoreField","keys","rating","NONE","onKeywordClick","setActiveKeyword","e","target","index","onKeywordRemoveClick","stopPropagation","i","parentNode","getKeywordElementAtIndex","removeChild","splice","k","onInputWrapClick","inputWrap","input","focus","onInputFocus","onInputBlur","onInputKeyDown","keyCode","nextKeyword","trim","dupe","createKeyword","createRating","level","t","nextIndex","insertBefore","lastElementChild","push","initInput","initKeywords","parse","Snippet","titleField","slugField","descField","snippetFields","title","slug","desc","mainTitleField","contains","options","isNew","initial","onMainTitleFieldInput","onTitleInput","removeEventListener","mainSlugField","textContent","onSlugChange","adjustHeight","style","height","_this3","scrollHeight","querySelectorAll","Craft","livePreview","on","SeoField","watchForSeoField","hasPreview","isInitialized","field","observer","MutationObserver","mutation","removedNodes","disconnect","observe","childList","window"],"mappings":"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"}